{"ast":null,"code":"var _jsxFileName = \"D:\\\\OneDrive\\\\Little_Projects\\\\Param-Fitter\\\\frontend\\\\src\\\\pages\\\\Training.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Form, Input, Button, message, Card } from 'antd';\nimport '@ant-design/icons'; /* UploadOutlined, */ // Removed UploadOutlined as Upload component is removed\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  TextArea\n} = Input; // Import TextArea\n\nconst Training = () => {\n  _s();\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(false);\n  const [trainingResult, setTrainingResult] = useState(null); // State to store training results\n\n  // Add a validator for JSON input\n  const validateJson = (_, value) => {\n    if (!value) {\n      return Promise.reject(new Error('请输入训练数据 (JSON 格式)'));\n    }\n    try {\n      const parsed = JSON.parse(value);\n      if (!parsed.Name || !parsed.Input_x || !Array.isArray(parsed.Input_x)) {\n        return Promise.reject(new Error('JSON 格式不符合预期：需要包含 &quot;Name&quot; 和 &quot;Input_x&quot; 数组。'));\n      }\n      // Further validate Input_x structure: each item must have 'x' (array) and 'y' (number)\n      for (const item of parsed.Input_x) {\n        if (!item.hasOwnProperty('x') || !Array.isArray(item.x) || !item.hasOwnProperty('y') || typeof item.y !== 'number') {\n          return Promise.reject(new Error('Input_x 数组中的每个项目必须包含 &quot;x&quot; (数组) 和 &quot;y&quot; (数字)。'));\n        }\n      }\n      return Promise.resolve();\n    } catch (e) {\n      return Promise.reject(new Error('无效的 JSON 格式'));\n    }\n  };\n  const onFinish = async values => {\n    try {\n      setLoading(true);\n      const parsedInput = JSON.parse(values.trainingJsonData); // Parse JSON string from textarea\n\n      // Construct the payload matching backend's TrainingData (with Field aliases)\n      const payload = {\n        Name: parsedInput.Name,\n        // Using &quot;Name&quot; directly as per user's JSON input\n        Input_x: parsedInput.Input_x // Using &quot;Input_x&quot; directly as per user's JSON input\n      };\n      const response = await axios.post('/api/train', payload); // Use proxy for /api/train\n      message.success('训练成功！');\n      setTrainingResult(response.data.parameters); // Store results\n      console.log('训练结果:', response.data);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      // Explicitly type error as any for easier access to properties like response\n      console.error('训练失败:', error);\n      message.error('训练失败：' + (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || error.message || String(error)));\n      setTrainingResult(null); // Clear previous results on error\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    title: \"\\u53C2\\u6570\\u8BAD\\u7EC3\",\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      form: form,\n      layout: \"vertical\",\n      onFinish: onFinish,\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"trainingJsonData\" // Changed name\n        ,\n        label: \"\\u8BAD\\u7EC3\\u6570\\u636E (JSON \\u683C\\u5F0F)\" // Changed label\n        ,\n        rules: [{\n          required: true,\n          validator: validateJson\n        }] // Added validator\n        ,\n        children: /*#__PURE__*/_jsxDEV(TextArea, {\n          rows: 10,\n          placeholder: \"\\u8BF7\\u8F93\\u5165 JSON \\u683C\\u5F0F\\u7684\\u8BAD\\u7EC3\\u6570\\u636E\\uFF0C\\u4F8B\\u5982\\uFF1A{ \\\"Name\\\": \\\"\\u6D4B\\u8BD5\\u7B97\\u6CD5\\\", \\\"Input_x\\\": [ { \\\"x\\\": [1.12, 1.86, 3.04, 4.27, 5.18], \\\"y\\\": 98.7 }, { \\\"x\\\": [0.94, 2.21, 3.12, 3.93, 4.87], \\\"y\\\": 101.5 } ] }\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          loading: loading,\n          children: \"\\u5F00\\u59CB\\u8BAD\\u7EC3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), trainingResult && /*#__PURE__*/_jsxDEV(Card, {\n      title: \"\\u8BAD\\u7EC3\\u7ED3\\u679C\",\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\u8BAD\\u7EC3Tag:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 14\n        }, this), \" \", trainingResult.tag || trainingResult.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\u7CFB\\u6570 (w):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 14\n        }, this), \" \", JSON.stringify(trainingResult.w)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\u622A\\u8DDD (b):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 14\n        }, this), \" \", trainingResult.b]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(Training, \"oMVeabf0MiPqPLnTk2gTyY4hlAI=\", false, function () {\n  return [Form.useForm];\n});\n_c = Training;\nexport default Training;\nvar _c;\n$RefreshReg$(_c, \"Training\");","map":{"version":3,"names":["React","useState","Form","Input","Button","message","Card","axios","jsxDEV","_jsxDEV","TextArea","Training","_s","form","useForm","loading","setLoading","trainingResult","setTrainingResult","validateJson","_","value","Promise","reject","Error","parsed","JSON","parse","Name","Input_x","Array","isArray","item","hasOwnProperty","x","y","resolve","e","onFinish","values","parsedInput","trainingJsonData","payload","response","post","success","data","parameters","console","log","error","_error$response","_error$response$data","detail","String","title","children","layout","Item","name","label","rules","required","validator","rows","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","type","htmlType","style","marginTop","tag","stringify","w","b","_c","$RefreshReg$"],"sources":["D:/OneDrive/Little_Projects/Param-Fitter/frontend/src/pages/Training.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Form, Input, Button, message, Card } from 'antd';\r\nimport { /* UploadOutlined, */ } from '@ant-design/icons'; // Removed UploadOutlined as Upload component is removed\r\nimport axios from 'axios';\r\n\r\nconst { TextArea } = Input; // Import TextArea\r\n\r\nconst Training: React.FC = () => {\r\n  const [form] = Form.useForm();\r\n  const [loading, setLoading] = useState(false);\r\n  const [trainingResult, setTrainingResult] = useState<any>(null); // State to store training results\r\n\r\n  // Add a validator for JSON input\r\n  const validateJson = (_: any, value: string) => {\r\n    if (!value) {\r\n      return Promise.reject(new Error('请输入训练数据 (JSON 格式)'));\r\n    }\r\n    try {\r\n      const parsed = JSON.parse(value);\r\n      if (!parsed.Name || !parsed.Input_x || !Array.isArray(parsed.Input_x)) {\r\n        return Promise.reject(new Error('JSON 格式不符合预期：需要包含 &quot;Name&quot; 和 &quot;Input_x&quot; 数组。'));\r\n      }\r\n      // Further validate Input_x structure: each item must have 'x' (array) and 'y' (number)\r\n      for (const item of parsed.Input_x) {\r\n        if (!item.hasOwnProperty('x') || !Array.isArray(item.x) || !item.hasOwnProperty('y') || typeof item.y !== 'number') {\r\n            return Promise.reject(new Error('Input_x 数组中的每个项目必须包含 &quot;x&quot; (数组) 和 &quot;y&quot; (数字)。'));\r\n        }\r\n      }\r\n      return Promise.resolve();\r\n    } catch (e) {\r\n      return Promise.reject(new Error('无效的 JSON 格式'));\r\n    }\r\n  };\r\n\r\n  const onFinish = async (values: any) => {\r\n    try {\r\n      setLoading(true);\r\n      const parsedInput = JSON.parse(values.trainingJsonData); // Parse JSON string from textarea\r\n      \r\n      // Construct the payload matching backend's TrainingData (with Field aliases)\r\n      const payload = {\r\n        Name: parsedInput.Name, // Using &quot;Name&quot; directly as per user's JSON input\r\n        Input_x: parsedInput.Input_x, // Using &quot;Input_x&quot; directly as per user's JSON input\r\n      };\r\n\r\n      const response = await axios.post('/api/train', payload); // Use proxy for /api/train\r\n      message.success('训练成功！');\r\n      setTrainingResult(response.data.parameters); // Store results\r\n      console.log('训练结果:', response.data);\r\n    } catch (error: any) { // Explicitly type error as any for easier access to properties like response\r\n      console.error('训练失败:', error);\r\n      message.error('训练失败：' + (error.response?.data?.detail || error.message || String(error)));\r\n      setTrainingResult(null); // Clear previous results on error\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card title=\"参数训练\">\r\n      <Form\r\n        form={form}\r\n        layout=\"vertical\"\r\n        onFinish={onFinish}\r\n      >\r\n        <Form.Item\r\n          name=\"trainingJsonData\" // Changed name\r\n          label=\"训练数据 (JSON 格式)\" // Changed label\r\n          rules={[{ required: true, validator: validateJson }]} // Added validator\r\n        >\r\n          <TextArea rows={10} placeholder=\"请输入 JSON 格式的训练数据，例如：{ &quot;Name&quot;: &quot;测试算法&quot;, &quot;Input_x&quot;: [ { &quot;x&quot;: [1.12, 1.86, 3.04, 4.27, 5.18], &quot;y&quot;: 98.7 }, { &quot;x&quot;: [0.94, 2.21, 3.12, 3.93, 4.87], &quot;y&quot;: 101.5 } ] }\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\r\n            开始训练\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n\r\n      {trainingResult && (\r\n        <Card title=\"训练结果\" style={{ marginTop: '20px' }}>\r\n          <p><strong>训练Tag:</strong> {trainingResult.tag || trainingResult.name}</p>\r\n          <p><strong>系数 (w):</strong> {JSON.stringify(trainingResult.w)}</p>\r\n          <p><strong>截距 (b):</strong> {trainingResult.b}</p>\r\n        </Card>\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Training; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,EAAEC,KAAK,EAAEC,MAAM,EAAEC,OAAO,EAAEC,IAAI,QAAQ,MAAM;AACzD,OAAsC,mBAAmB,CAAC,CAAjD,sBAAkD;AAC3D,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAM;EAAEC;AAAS,CAAC,GAAGP,KAAK,CAAC,CAAC;;AAE5B,MAAMQ,QAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,IAAI,CAAC,GAAGX,IAAI,CAACY,OAAO,CAAC,CAAC;EAC7B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACgB,cAAc,EAAEC,iBAAiB,CAAC,GAAGjB,QAAQ,CAAM,IAAI,CAAC,CAAC,CAAC;;EAEjE;EACA,MAAMkB,YAAY,GAAGA,CAACC,CAAM,EAAEC,KAAa,KAAK;IAC9C,IAAI,CAACA,KAAK,EAAE;MACV,OAAOC,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAAC,mBAAmB,CAAC,CAAC;IACvD;IACA,IAAI;MACF,MAAMC,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACN,KAAK,CAAC;MAChC,IAAI,CAACI,MAAM,CAACG,IAAI,IAAI,CAACH,MAAM,CAACI,OAAO,IAAI,CAACC,KAAK,CAACC,OAAO,CAACN,MAAM,CAACI,OAAO,CAAC,EAAE;QACrE,OAAOP,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAAC,8DAA8D,CAAC,CAAC;MAClG;MACA;MACA,KAAK,MAAMQ,IAAI,IAAIP,MAAM,CAACI,OAAO,EAAE;QACjC,IAAI,CAACG,IAAI,CAACC,cAAc,CAAC,GAAG,CAAC,IAAI,CAACH,KAAK,CAACC,OAAO,CAACC,IAAI,CAACE,CAAC,CAAC,IAAI,CAACF,IAAI,CAACC,cAAc,CAAC,GAAG,CAAC,IAAI,OAAOD,IAAI,CAACG,CAAC,KAAK,QAAQ,EAAE;UAChH,OAAOb,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAAC,+DAA+D,CAAC,CAAC;QACrG;MACF;MACA,OAAOF,OAAO,CAACc,OAAO,CAAC,CAAC;IAC1B,CAAC,CAAC,OAAOC,CAAC,EAAE;MACV,OAAOf,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAAC,aAAa,CAAC,CAAC;IACjD;EACF,CAAC;EAED,MAAMc,QAAQ,GAAG,MAAOC,MAAW,IAAK;IACtC,IAAI;MACFvB,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMwB,WAAW,GAAGd,IAAI,CAACC,KAAK,CAACY,MAAM,CAACE,gBAAgB,CAAC,CAAC,CAAC;;MAEzD;MACA,MAAMC,OAAO,GAAG;QACdd,IAAI,EAAEY,WAAW,CAACZ,IAAI;QAAE;QACxBC,OAAO,EAAEW,WAAW,CAACX,OAAO,CAAE;MAChC,CAAC;MAED,MAAMc,QAAQ,GAAG,MAAMpC,KAAK,CAACqC,IAAI,CAAC,YAAY,EAAEF,OAAO,CAAC,CAAC,CAAC;MAC1DrC,OAAO,CAACwC,OAAO,CAAC,OAAO,CAAC;MACxB3B,iBAAiB,CAACyB,QAAQ,CAACG,IAAI,CAACC,UAAU,CAAC,CAAC,CAAC;MAC7CC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEN,QAAQ,CAACG,IAAI,CAAC;IACrC,CAAC,CAAC,OAAOI,KAAU,EAAE;MAAA,IAAAC,eAAA,EAAAC,oBAAA;MAAE;MACrBJ,OAAO,CAACE,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;MAC7B7C,OAAO,CAAC6C,KAAK,CAAC,OAAO,IAAI,EAAAC,eAAA,GAAAD,KAAK,CAACP,QAAQ,cAAAQ,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBL,IAAI,cAAAM,oBAAA,uBAApBA,oBAAA,CAAsBC,MAAM,KAAIH,KAAK,CAAC7C,OAAO,IAAIiD,MAAM,CAACJ,KAAK,CAAC,CAAC,CAAC;MACzFhC,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC;IAC3B,CAAC,SAAS;MACRF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEP,OAAA,CAACH,IAAI;IAACiD,KAAK,EAAC,0BAAM;IAAAC,QAAA,gBAChB/C,OAAA,CAACP,IAAI;MACHW,IAAI,EAAEA,IAAK;MACX4C,MAAM,EAAC,UAAU;MACjBnB,QAAQ,EAAEA,QAAS;MAAAkB,QAAA,gBAEnB/C,OAAA,CAACP,IAAI,CAACwD,IAAI;QACRC,IAAI,EAAC,kBAAkB,CAAC;QAAA;QACxBC,KAAK,EAAC,8CAAgB,CAAC;QAAA;QACvBC,KAAK,EAAE,CAAC;UAAEC,QAAQ,EAAE,IAAI;UAAEC,SAAS,EAAE5C;QAAa,CAAC,CAAE,CAAC;QAAA;QAAAqC,QAAA,eAEtD/C,OAAA,CAACC,QAAQ;UAACsD,IAAI,EAAE,EAAG;UAACC,WAAW,EAAC;QAAsO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChQ,CAAC,eAEZ5D,OAAA,CAACP,IAAI,CAACwD,IAAI;QAAAF,QAAA,eACR/C,OAAA,CAACL,MAAM;UAACkE,IAAI,EAAC,SAAS;UAACC,QAAQ,EAAC,QAAQ;UAACxD,OAAO,EAAEA,OAAQ;UAAAyC,QAAA,EAAC;QAE3D;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,EAENpD,cAAc,iBACbR,OAAA,CAACH,IAAI;MAACiD,KAAK,EAAC,0BAAM;MAACiB,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAO,CAAE;MAAAjB,QAAA,gBAC9C/C,OAAA;QAAA+C,QAAA,gBAAG/C,OAAA;UAAA+C,QAAA,EAAQ;QAAM;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACpD,cAAc,CAACyD,GAAG,IAAIzD,cAAc,CAAC0C,IAAI;MAAA;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1E5D,OAAA;QAAA+C,QAAA,gBAAG/C,OAAA;UAAA+C,QAAA,EAAQ;QAAO;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAAC3C,IAAI,CAACiD,SAAS,CAAC1D,cAAc,CAAC2D,CAAC,CAAC;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClE5D,OAAA;QAAA+C,QAAA,gBAAG/C,OAAA;UAAA+C,QAAA,EAAQ;QAAO;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACpD,cAAc,CAAC4D,CAAC;MAAA;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CACP;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEX,CAAC;AAACzD,EAAA,CAlFID,QAAkB;EAAA,QACPT,IAAI,CAACY,OAAO;AAAA;AAAAgE,EAAA,GADvBnE,QAAkB;AAoFxB,eAAeA,QAAQ;AAAC,IAAAmE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}