{"ast":null,"code":"var _jsxFileName = \"D:\\\\OneDrive\\\\Little_Projects\\\\Param-Fitter\\\\frontend\\\\src\\\\pages\\\\Settings.tsx\",\n  _s = $RefreshSig$();\n/* ==================== Settings.tsx（整文件覆写）==================== */\n/* 功能：在“设置”页提供一个按钮 → 调用 /api/test，检测后端是否连通 */\nimport React, { useState } from 'react';\nimport { Card, Button, message } from 'antd';\nimport { ApiOutlined } from '@ant-design/icons';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Settings = () => {\n  _s();\n  // 按钮 loading 状态\n  const [loading, setLoading] = useState(false);\n\n  /* ---------- 点击测试后端 ---------- */\n  const testBackend = async () => {\n    setLoading(true);\n    try {\n      // 调用后端现有接口 /api/test\n      const {\n        data\n      } = await axios.get('/api/test');\n      // 成功：后端应该返回 { \"message\": \"后端连接成功！\" }\n      message.success(data.message || '后端连接成功！');\n    } catch (err) {\n      var _err$response;\n      // 失败：弹出状态码或错误信息\n      message.error(`后端连接失败: ${(err === null || err === void 0 ? void 0 : (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) || err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  /* ---------- JSX ---------- */\n  return /*#__PURE__*/_jsxDEV(Card, {\n    title: \"\\u7CFB\\u7EDF\\u8BBE\\u7F6E / \\u8BCA\\u65AD\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        marginBottom: 12\n      },\n      children: \"\\u70B9\\u51FB\\u6309\\u94AE\\u53EF\\u9A8C\\u8BC1\\u524D\\u7AEF\\u662F\\u5426\\u5DF2\\u6B63\\u786E\\u8FDE\\u5230 FastAPI \\u540E\\u7AEF\\u3002\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      icon: /*#__PURE__*/_jsxDEV(ApiOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }, this),\n      onClick: testBackend,\n      loading: loading,\n      children: \"\\u6D4B\\u8BD5\\u540E\\u7AEF\\u8FDE\\u63A5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Settings, \"/Rjh5rPqCCqf0XYnTUk9ZNavw3Q=\");\n_c = Settings;\nexport default Settings;\nvar _c;\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"names":["React","useState","Card","Button","message","ApiOutlined","axios","jsxDEV","_jsxDEV","Settings","_s","loading","setLoading","testBackend","data","get","success","err","_err$response","error","response","status","title","children","style","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","type","icon","onClick","_c","$RefreshReg$"],"sources":["D:/OneDrive/Little_Projects/Param-Fitter/frontend/src/pages/Settings.tsx"],"sourcesContent":["/* ==================== Settings.tsx（整文件覆写）==================== */\r\n/* 功能：在“设置”页提供一个按钮 → 调用 /api/test，检测后端是否连通 */\r\nimport React, { useState } from 'react';\r\nimport { Card, Button, message } from 'antd';\r\nimport { ApiOutlined } from '@ant-design/icons';\r\nimport axios from 'axios';\r\n\r\nconst Settings: React.FC = () => {\r\n  // 按钮 loading 状态\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  /* ---------- 点击测试后端 ---------- */\r\n  const testBackend = async () => {\r\n    setLoading(true);\r\n    try {\r\n      // 调用后端现有接口 /api/test\r\n      const { data } = await axios.get('/api/test');\r\n      // 成功：后端应该返回 { \"message\": \"后端连接成功！\" }\r\n      message.success(data.message || '后端连接成功！');\r\n    } catch (err: any) {\r\n      // 失败：弹出状态码或错误信息\r\n      message.error(`后端连接失败: ${err?.response?.status || err.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  /* ---------- JSX ---------- */\r\n  return (\r\n    <Card title=\"系统设置 / 诊断\">\r\n      <p style={{ marginBottom: 12 }}>\r\n        点击按钮可验证前端是否已正确连到 FastAPI 后端。\r\n      </p>\r\n\r\n      <Button\r\n        type=\"primary\"\r\n        icon={<ApiOutlined />}\r\n        onClick={testBackend}\r\n        loading={loading}\r\n      >\r\n        测试后端连接\r\n      </Button>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n"],"mappings":";;AAAA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,EAAEC,MAAM,EAAEC,OAAO,QAAQ,MAAM;AAC5C,SAASC,WAAW,QAAQ,mBAAmB;AAC/C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;;EAE7C;EACA,MAAMY,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9BD,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF;MACA,MAAM;QAAEE;MAAK,CAAC,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,WAAW,CAAC;MAC7C;MACAX,OAAO,CAACY,OAAO,CAACF,IAAI,CAACV,OAAO,IAAI,SAAS,CAAC;IAC5C,CAAC,CAAC,OAAOa,GAAQ,EAAE;MAAA,IAAAC,aAAA;MACjB;MACAd,OAAO,CAACe,KAAK,CAAC,WAAW,CAAAF,GAAG,aAAHA,GAAG,wBAAAC,aAAA,GAAHD,GAAG,CAAEG,QAAQ,cAAAF,aAAA,uBAAbA,aAAA,CAAeG,MAAM,KAAIJ,GAAG,CAACb,OAAO,EAAE,CAAC;IAClE,CAAC,SAAS;MACRQ,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,oBACEJ,OAAA,CAACN,IAAI;IAACoB,KAAK,EAAC,yCAAW;IAAAC,QAAA,gBACrBf,OAAA;MAAGgB,KAAK,EAAE;QAAEC,YAAY,EAAE;MAAG,CAAE;MAAAF,QAAA,EAAC;IAEhC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAEJrB,OAAA,CAACL,MAAM;MACL2B,IAAI,EAAC,SAAS;MACdC,IAAI,eAAEvB,OAAA,CAACH,WAAW;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAE;MACtBG,OAAO,EAAEnB,WAAY;MACrBF,OAAO,EAAEA,OAAQ;MAAAY,QAAA,EAClB;IAED;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEX,CAAC;AAACnB,EAAA,CArCID,QAAkB;AAAAwB,EAAA,GAAlBxB,QAAkB;AAuCxB,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}