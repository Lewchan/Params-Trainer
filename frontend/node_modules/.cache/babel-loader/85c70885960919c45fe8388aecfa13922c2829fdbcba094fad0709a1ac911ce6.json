{"ast":null,"code":"var _jsxFileName = \"D:\\\\OneDrive\\\\Little_Projects\\\\Param-Fitter\\\\frontend\\\\src\\\\pages\\\\Training.tsx\",\n  _s = $RefreshSig$();\n/* ==================== Training.tsx（整文件覆写）==================== */\n// 作用：1. 上传 / 切换 Tag.json（发到 /api/upload-tag-json，后端记录 current_tag_file）\n//      2. 选择训练数据集 → 点击“开始训练” → 只把 data_json 发给 /api/train\n//      3. 训练成功后把 w+b 结果展示\n// ====================================================================\n\nimport React, { useState, useRef } from 'react'; // React Hooks\nimport { Card, Upload, Button, message } from 'antd'; // UI 组件\nimport { UploadOutlined } from '@ant-design/icons'; // 上传图标\n// Upload 类型\n\n// File 类型\nimport axios from 'axios'; // 请求库\n\n/* -------------------- 组件主体 -------------------- */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Training = () => {\n  _s();\n  /* ====== Tag 文件相关状态 ====== */\n  const [tagFileName, setTagFileName] = useState(null); // 当前激活 Tag\n  const [uploadingTag, setUploadingTag] = useState(false); // 上传 Tag Loading\n\n  /* ====== 训练数据集相关状态 ====== */\n  const trainFileRef = useRef(null); // 训练数据文件对象\n  const [trainFileName, setTrainFileName] = useState(null); // 训练数据文件名\n\n  /* ====== 训练结果 & Loading ====== */\n  const [loadingTrain, setLoadingTrain] = useState(false); // 训练按钮 Loading\n  const [trainResult, setTrainResult] = useState(null); // 训练后 w b\n\n  /* ***************************************************************** */\n  /* ① 自定义上传 Tag.json  ----------------------------------------- */\n  const handleTagUpload = async option => {\n    const {\n      file,\n      onSuccess,\n      onError\n    } = option; // 取 file\n    setUploadingTag(true); // 开启 Loading\n    try {\n      const fd = new FormData(); // 组装表单\n      fd.append('file', file, file.name); // 字段名 file\n\n      /* 调用后端接口：上传 Tag 文件 */\n      await axios.post('/api/upload-tag-json', fd, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setTagFileName(file.name); // 记录文件名\n      message.success(`${file.name} 已设为当前 Tag 文件`); // 提示成功\n      onSuccess && onSuccess({}, {}); // 通知 Upload 组件\n    } catch (err) {\n      var _err$response, _err$response$data;\n      message.error(`Tag 上传失败：${(err === null || err === void 0 ? void 0 : (_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.detail) || err.message}`);\n      onError && onError(err); // 通知失败\n    } finally {\n      setUploadingTag(false); // 关 Loading\n    }\n  };\n\n  /* ② 点击“开始训练” ---------------------------------------------- */\n  const handleTrain = async () => {\n    /* 2.1 前置校验：Tag 和 训练数据都要有 */\n    if (!tagFileName) {\n      message.error('请先上传 / 选择 Tag 文件');\n      return;\n    }\n    const dataFile = trainFileRef.current;\n    if (!dataFile) {\n      message.error('请先上传训练数据集');\n      return;\n    }\n    setLoadingTrain(true); // 打开 Loading\n    try {\n      var _data$float_array;\n      /* 2.2 读取训练数据文件 → 自动识别 UTF-8 / UTF-16LE */\n      const buffer = await dataFile.arrayBuffer(); // 读成二进制\n      let jsonStr; // 待解析字符串\n      try {\n        jsonStr = new TextDecoder('utf-8').decode(buffer); // 先尝试 UTF-8\n        JSON.parse(jsonStr); // 能解析就 OK\n      } catch {\n        jsonStr = new TextDecoder('utf-16le').decode(buffer); // 再试 UTF-16LE\n      }\n      const jsonData = JSON.parse(jsonStr); // { name, input_x }\n\n      /* 2.3 只携带 data_json 发给 /api/train */\n      const fd = new FormData();\n      fd.append('data_json', JSON.stringify(jsonData)); // 仅此一字段\n\n      const {\n        data\n      } = await axios.post('/api/train', fd, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n\n      /* 2.4 显示结果 */\n      message.success('训练成功！');\n      setTrainResult((_data$float_array = data.float_array) !== null && _data$float_array !== void 0 ? _data$float_array : data.parameters); // 兼容老字段\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      message.error(`训练失败：${(err === null || err === void 0 ? void 0 : (_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.detail) || err.message}`);\n      setTrainResult(null);\n    } finally {\n      setLoadingTrain(false); // 关 Loading\n    }\n  };\n\n  /* ③ Tag Upload 组件配置 ----------------------------------------- */\n  const tagUploadProps = {\n    accept: '.json',\n    // 只接 JSON\n    maxCount: 1,\n    // 仅单个\n    customRequest: handleTagUpload,\n    // 自定义上传\n    onRemove: () => {\n      setTagFileName(null);\n      return true;\n    },\n    // 删除\n    fileList: tagFileName ? [{\n      uid: 'tag',\n      name: tagFileName,\n      status: 'done'\n    }] : []\n  };\n\n  /* ④ 训练数据集 Upload 配置 -------------------------------------- */\n  const dataUploadProps = {\n    accept: '.json',\n    maxCount: 1,\n    customRequest: async option => {\n      // 只保存到前端\n      const {\n        file,\n        onSuccess\n      } = option;\n      trainFileRef.current = file;\n      setTrainFileName(file.name);\n      message.success(`${file.name} 已就绪，点击“开始训练”`);\n      onSuccess && onSuccess({}, {});\n    },\n    onRemove: () => {\n      trainFileRef.current = null;\n      setTrainFileName(null);\n      return true;\n    },\n    fileList: trainFileName ? [{\n      uid: 'data',\n      name: trainFileName,\n      status: 'done'\n    }] : []\n  };\n\n  /* -------------------- 渲染 JSX -------------------- */\n  return /*#__PURE__*/_jsxDEV(Card, {\n    title: \"\\u53C2\\u6570\\u8BAD\\u7EC3\",\n    children: [/*#__PURE__*/_jsxDEV(Upload, {\n      ...tagUploadProps,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 23\n        }, this),\n        loading: uploadingTag,\n        disabled: uploadingTag || !!tagFileName,\n        children: \"\\u4E0A\\u4F20 / \\u5207\\u6362 Tag \\u6587\\u4EF6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), tagFileName && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        marginTop: 8\n      },\n      children: [\"\\u5F53\\u524D Tag: \", tagFileName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(Upload, {\n      ...dataUploadProps,\n      style: {\n        marginTop: 16\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 23\n        }, this),\n        disabled: !!trainFileName,\n        children: \"\\u4E0A\\u4F20\\u8BAD\\u7EC3\\u6570\\u636E\\u96C6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), trainFileName && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        marginTop: 8\n      },\n      children: [\"\\u5DF2\\u9009\\u62E9\\u6570\\u636E\\u96C6: \", trainFileName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      onClick: handleTrain,\n      loading: loadingTrain,\n      disabled: !trainFileName || !tagFileName,\n      style: {\n        marginTop: 16\n      },\n      children: \"\\u5F00\\u59CB\\u8BAD\\u7EC3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), trainResult && /*#__PURE__*/_jsxDEV(Card, {\n      title: \"\\u8BAD\\u7EC3\\u7ED3\\u679C\",\n      style: {\n        marginTop: 24\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Float_Array :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 14\n        }, this), \" \", JSON.stringify(trainResult)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n_s(Training, \"CKKXfTfgU3R+zeU5e2i676IDwvA=\");\n_c = Training;\nexport default Training; // 导出组件\nvar _c;\n$RefreshReg$(_c, \"Training\");","map":{"version":3,"names":["React","useState","useRef","Card","Upload","Button","message","UploadOutlined","axios","jsxDEV","_jsxDEV","Training","_s","tagFileName","setTagFileName","uploadingTag","setUploadingTag","trainFileRef","trainFileName","setTrainFileName","loadingTrain","setLoadingTrain","trainResult","setTrainResult","handleTagUpload","option","file","onSuccess","onError","fd","FormData","append","name","post","headers","success","err","_err$response","_err$response$data","error","response","data","detail","handleTrain","dataFile","current","_data$float_array","buffer","arrayBuffer","jsonStr","TextDecoder","decode","JSON","parse","jsonData","stringify","float_array","parameters","_err$response2","_err$response2$data","tagUploadProps","accept","maxCount","customRequest","onRemove","fileList","uid","status","dataUploadProps","title","children","icon","fileName","_jsxFileName","lineNumber","columnNumber","loading","disabled","style","marginTop","type","onClick","_c","$RefreshReg$"],"sources":["D:/OneDrive/Little_Projects/Param-Fitter/frontend/src/pages/Training.tsx"],"sourcesContent":["/* ==================== Training.tsx（整文件覆写）==================== */\r\n// 作用：1. 上传 / 切换 Tag.json（发到 /api/upload-tag-json，后端记录 current_tag_file）\r\n//      2. 选择训练数据集 → 点击“开始训练” → 只把 data_json 发给 /api/train\r\n//      3. 训练成功后把 w+b 结果展示\r\n// ====================================================================\r\n\r\nimport React, { useState, useRef } from 'react';            // React Hooks\r\nimport { Card, Upload, Button, message } from 'antd';       // UI 组件\r\nimport { UploadOutlined } from '@ant-design/icons';         // 上传图标\r\nimport type { UploadProps, UploadFile } from 'antd';        // Upload 类型\r\nimport type { RcFile } from 'antd/es/upload';               // File 类型\r\nimport axios from 'axios';                                  // 请求库\r\n\r\n/* -------------------- 组件主体 -------------------- */\r\nconst Training: React.FC = () => {\r\n  /* ====== Tag 文件相关状态 ====== */\r\n  const [tagFileName, setTagFileName] = useState<string | null>(null); // 当前激活 Tag\r\n  const [uploadingTag, setUploadingTag] = useState(false);             // 上传 Tag Loading\r\n\r\n  /* ====== 训练数据集相关状态 ====== */\r\n  const trainFileRef = useRef<RcFile | null>(null);                    // 训练数据文件对象\r\n  const [trainFileName, setTrainFileName] = useState<string | null>(null); // 训练数据文件名\r\n\r\n  /* ====== 训练结果 & Loading ====== */\r\n  const [loadingTrain, setLoadingTrain] = useState(false);             // 训练按钮 Loading\r\n  const [trainResult, setTrainResult] = useState<any>(null);           // 训练后 w b\r\n\r\n  /* ***************************************************************** */\r\n  /* ① 自定义上传 Tag.json  ----------------------------------------- */\r\n  const handleTagUpload = async (option: any) => {\r\n    const { file, onSuccess, onError } = option;                       // 取 file\r\n    setUploadingTag(true);                                             // 开启 Loading\r\n    try {\r\n      const fd = new FormData();                                       // 组装表单\r\n      fd.append('file', file as Blob, (file as any).name);             // 字段名 file\r\n\r\n      /* 调用后端接口：上传 Tag 文件 */\r\n      await axios.post('/api/upload-tag-json', fd, {\r\n        headers: { 'Content-Type': 'multipart/form-data' },\r\n      });\r\n\r\n      setTagFileName((file as RcFile).name);                           // 记录文件名\r\n      message.success(`${file.name} 已设为当前 Tag 文件`);              // 提示成功\r\n      onSuccess && onSuccess({}, {} as any);                           // 通知 Upload 组件\r\n    } catch (err: any) {\r\n      message.error(`Tag 上传失败：${err?.response?.data?.detail || err.message}`);\r\n      onError && onError(err);                                         // 通知失败\r\n    } finally {\r\n      setUploadingTag(false);                                          // 关 Loading\r\n    }\r\n  };\r\n\r\n  /* ② 点击“开始训练” ---------------------------------------------- */\r\n  const handleTrain = async () => {\r\n    /* 2.1 前置校验：Tag 和 训练数据都要有 */\r\n    if (!tagFileName) {\r\n      message.error('请先上传 / 选择 Tag 文件');\r\n      return;\r\n    }\r\n    const dataFile = trainFileRef.current;\r\n    if (!dataFile) {\r\n      message.error('请先上传训练数据集');\r\n      return;\r\n    }\r\n\r\n    setLoadingTrain(true);                                             // 打开 Loading\r\n    try {\r\n      /* 2.2 读取训练数据文件 → 自动识别 UTF-8 / UTF-16LE */\r\n      const buffer = await dataFile.arrayBuffer();                     // 读成二进制\r\n      let jsonStr: string;                                             // 待解析字符串\r\n      try {\r\n        jsonStr = new TextDecoder('utf-8').decode(buffer);             // 先尝试 UTF-8\r\n        JSON.parse(jsonStr);                                           // 能解析就 OK\r\n      } catch {\r\n        jsonStr = new TextDecoder('utf-16le').decode(buffer);          // 再试 UTF-16LE\r\n      }\r\n      const jsonData = JSON.parse(jsonStr);                            // { name, input_x }\r\n\r\n      /* 2.3 只携带 data_json 发给 /api/train */\r\n      const fd = new FormData();\r\n      fd.append('data_json', JSON.stringify(jsonData));                // 仅此一字段\r\n\r\n      const { data } = await axios.post('/api/train', fd, {\r\n        headers: { 'Content-Type': 'multipart/form-data' },\r\n      });\r\n\r\n      /* 2.4 显示结果 */\r\n      message.success('训练成功！');\r\n      setTrainResult(data.float_array ?? data.parameters);             // 兼容老字段\r\n    } catch (err: any) {\r\n      message.error(`训练失败：${err?.response?.data?.detail || err.message}`);\r\n      setTrainResult(null);\r\n    } finally {\r\n      setLoadingTrain(false);                                          // 关 Loading\r\n    }\r\n  };\r\n\r\n  /* ③ Tag Upload 组件配置 ----------------------------------------- */\r\n  const tagUploadProps: UploadProps = {\r\n    accept: '.json',                                                   // 只接 JSON\r\n    maxCount: 1,                                                       // 仅单个\r\n    customRequest: handleTagUpload,                                    // 自定义上传\r\n    onRemove: () => { setTagFileName(null); return true; },            // 删除\r\n    fileList: tagFileName ? [{ uid: 'tag', name: tagFileName,\r\n                               status: 'done' as UploadFile['status']}] : [],\r\n  };\r\n\r\n  /* ④ 训练数据集 Upload 配置 -------------------------------------- */\r\n  const dataUploadProps: UploadProps = {\r\n    accept: '.json',\r\n    maxCount: 1,\r\n    customRequest: async (option: any) => {                            // 只保存到前端\r\n      const { file, onSuccess } = option;\r\n      trainFileRef.current = file as RcFile;\r\n      setTrainFileName((file as RcFile).name);\r\n      message.success(`${file.name} 已就绪，点击“开始训练”`);\r\n      onSuccess && onSuccess({}, {} as any);\r\n    },\r\n    onRemove: () => { trainFileRef.current = null; setTrainFileName(null); return true; },\r\n    fileList: trainFileName ? [{\r\n      uid: 'data',\r\n      name: trainFileName,\r\n      status: 'done' as UploadFile['status'],\r\n    }] : [],\r\n  };\r\n\r\n  /* -------------------- 渲染 JSX -------------------- */\r\n  return (\r\n    <Card title=\"参数训练\">\r\n      {/* Tag 上传区 */}\r\n      <Upload {...tagUploadProps}>\r\n        <Button icon={<UploadOutlined />} loading={uploadingTag}\r\n                disabled={uploadingTag || !!tagFileName}>\r\n          上传 / 切换 Tag 文件\r\n        </Button>\r\n      </Upload>\r\n      {tagFileName && <p style={{ marginTop: 8 }}>当前 Tag: {tagFileName}</p>}\r\n\r\n      {/* 训练数据集上传区 */}\r\n      <Upload {...dataUploadProps} style={{ marginTop: 16 }}>\r\n        <Button icon={<UploadOutlined />} disabled={!!trainFileName}>\r\n          上传训练数据集\r\n        </Button>\r\n      </Upload>\r\n      {trainFileName && <p style={{ marginTop: 8 }}>已选择数据集: {trainFileName}</p>}\r\n\r\n      {/* 开始训练按钮 */}\r\n      <Button type=\"primary\"\r\n              onClick={handleTrain}\r\n              loading={loadingTrain}\r\n              disabled={!trainFileName || !tagFileName}\r\n              style={{ marginTop: 16 }}>\r\n        开始训练\r\n      </Button>\r\n\r\n      {/* 训练结果展示 */}\r\n      {trainResult && (\r\n        <Card title=\"训练结果\" style={{ marginTop: 24 }}>\r\n          <p><b>Float_Array :</b> {JSON.stringify(trainResult)}</p>\r\n        </Card>\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Training;              // 导出组件\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}